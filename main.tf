terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 5.55.0"
    }
    tls = {
      source  = "hashicorp/tls"
      version = "~> 4.0"
    }
  }

  backend "s3" { }

}

module "s3_buckets_project" {
  source = "./ci-cd-pipeline/03-s3-bucket"

  s3_bucket_name_pipeline = var.s3_bucket_name_pipeline
  kms_key_arn             = module.kms_keys.arn 

  tags = {
    Name                = var.s3_bucket_name_pipeline
    Description         = "S3 Bucket to store artifacts generated by CodePipeline"
    Environment         = var.environment
    CreatedBy           = var.created_by
    Application         = var.application
    CostCenter          = var.cost_center
    Contact             = var.contact
    MaintenanceWindow   = var.maintenance_window
    DeletionDate        = var.deletion_date
  }
}

module "kms_keys" {
  source = "./ci-cd-pipeline/01-kms-keys"

  codepipeline_role_arn = module.iam_permissions.iam_role_cp_arn
  tags = {
    Name                = var.kms_key_name
    Description         = "This key is used to encrypt bucket objects"
    Environment         = var.environment
    CreatedBy           = var.created_by
    Application         = var.application
    CostCenter          = var.cost_center
    Contact             = var.contact
    MaintenanceWindow   = var.maintenance_window
    DeletionDate        = var.deletion_date
  }
}

module "iam_permissions" {
  source      = "./ci-cd-pipeline/02-iam-permissions"

  codebuild_role_name       = "${var.codebuild_name}-service-role"
  codedeploy_role_name      = "${var.codedeploy_name}-service-role"
  codepipeline_role_name    = "${var.codepipeline_name}-service-role"
  codebuild_name            = var.codebuild_name//"codebuild-basic"
  bucket_codepipeline_name  = var.s3_bucket_name_pipeline//"codepipeline-basics"
  kms_arn                   = module.kms_keys.arn

  tags = {
    Environment         = var.environment
    CreatedBy           = var.created_by
    Application         = var.application
    CostCenter          = var.cost_center
    Contact             = var.contact
    MaintenanceWindow   = var.maintenance_window
    DeletionDate        = var.deletion_date
  }
}

module "codebuild" {
  depends_on = [ 
    module.iam_permissions, 
    module.kms_keys 
  ]

  source = "./ci-cd-pipeline/04-code-build"

  codebuild_name                      = var.codebuild_name//"codebuild-basic"
  build_project_source                = var.build_project_source//"CODEPIPELINE"
  builder_compute_type                = var.builder_compute_type//"BUILD_GENERAL1_SMALL"
  builder_image                       = var.builder_image//"aws/codebuild/standard:6.0"
  builder_type                        = var.builder_type//"LINUX_CONTAINER"
  codebuild_service_role_arn          = module.iam_permissions.iam_role_codebuild_arn
  encryption_key_arn                  = module.kms_keys.arn
  s3_bucket_codepipeline              = module.s3_buckets_project.s3bucket_name
  artifact_identifier                 = var.artifact_identifier 

  tags = {
    Name                = var.codebuild_name
    Description         = "Codebuild project to build dependencies for the projects"
    Environment         = var.environment
    CreatedBy           = var.created_by
    Application         = var.application
    CostCenter          = var.cost_center
    Contact             = var.contact
    MaintenanceWindow   = var.maintenance_window
    DeletionDate        = var.deletion_date
  }
}

module "codedeploy" {
  depends_on = [ 
    module.codebuild,
    module.iam_permissions,
    module.kms_keys
  ]

  source = "./ci-cd-pipeline/05-code-deploy"

  codedeploy_project_name     = var.codedeploy_name
  codedeploy_service_role_arn = module.iam_permissions.iam_role_codedeploy_arn
  
  tags = {
    Name                = var.codedeploy_name
    Description         = "Codedeploy project to configure and install application in a compute server"
    Environment         = var.environment
    CreatedBy           = var.created_by
    Application         = var.application
    CostCenter          = var.cost_center
    Contact             = var.contact
    MaintenanceWindow   = var.maintenance_window
    DeletionDate        = var.deletion_date
  }
}

module "codepipeline" {
  depends_on = [ 
    module.codebuild, 
    module.kms_keys, 
    module.iam_permissions 
  ]
  
  source = "./ci-cd-pipeline/06-codepipeline"

  aws_codecommit_repo_branch          = var.codecommit_repo_branch//"main"
  aws_codecommit_repo_id              = var.codecommit_repo_name//"api-demos-devops"
  iam_codepipeline_arn                = module.iam_permissions.iam_role_cp_arn
  kms_arn_s3_bucket                   = module.kms_keys.arn
  s3_bucket_codepipeline              = module.s3_buckets_project.s3bucket_name
  name                                = var.codepipeline_name
  name_stage_build                    = var.pipeline_stage_build_name//"BuildStage"
  name_stage_deploy                   = var.pipeline_stage_deploy_name//"DeployStage"  
  codebuild_name                      = var.codebuild_name//"codebuild-basic"
  codedeploy_app_name                 = module.codedeploy.codedeploy_app_name
  codedeploy_deployment_group_name    = module.codedeploy.codedeploy_deployment_group_name
  execution_mode                      = var.execution_mode
  version_pipeline                    = var.version_pipeline 
   
  tags = {
    Name                = var.codepipeline_name
    Description         = "Codedeploy project to configure and install application in a compute server"
    Environment         = var.environment
    CreatedBy           = var.created_by
    Application         = var.application
    CostCenter          = var.cost_center
    Contact             = var.contact
    MaintenanceWindow   = var.maintenance_window
    DeletionDate        = var.deletion_date
  }
}
